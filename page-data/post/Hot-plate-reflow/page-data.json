{"componentChunkName":"component---src-templates-post-js","path":"/post/Hot-plate-reflow/","result":{"pageContext":{"post":{"title":"ホットプレートを使ってリフロー環境を作る","image":{"file":{"url":"//images.ctfassets.net/nxx3igvspvb5/1XB63yczHfy5wXgO4dOjN1/059f29ba6b967acfddd174951b823c37/PXL_20220929_170609142.jpg"}},"body":{"childMarkdownRemark":{"html":"<p>　表面実装部品などをはんだ付けするのに使われるリフロー装置ですが、そろそろ自分も面実装部品を扱う機会が増えてきたので自宅にも欲しくなり、都合よくホットプレートが転がっていたので簡易リフロー装置を作ることにしました。</p>\n<h2>概要</h2>\n<p>Arduinoを使用してホットプレートの温度を取得し、得た温度を基にホットプレートの制御を行う。\nプログラム等→<a href=\"https://github.com/hirame-tech/Hotplate_reflow/tree/master\">リポジトリ</a></p>\n<h2>開発環境</h2>\n<ul>\n<li>Visual Studio Code + PlatformIO</li>\n</ul>\n<h2>主な部品</h2>\n<ul>\n<li>Arduino Nano</li>\n</ul>\n<p>メイン制御マイコンです。</p>\n<ul>\n<li><a href=\"https://akizukidenshi.com/catalog/g/gM-08218/\">MAX31855</a>+<a href=\"https://akizukidenshi.com/catalog/g/gP-00306/\">K型熱電対</a></li>\n</ul>\n<p>ホットプレートの温度測定部分です。</p>\n<ul>\n<li><a href=\"https://akizukidenshi.com/catalog/g/gK-00210/\">SSRキット</a></li>\n</ul>\n<p>ホットプレートをON/OFFするやつです。</p>\n<ul>\n<li>家に転がってたホットプレート</li>\n</ul>\n<p>あったかくなるやつです。</p>\n<h2>温度の取得</h2>\n<h3>配線</h3>\n<p>MAX31855とArduinoNanoを配線します。</p>\n<table>\n<thead>\n<tr>\n<th>MAX31855</th>\n<th>Arduino Nano</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Vin</td>\n<td>5V</td>\n</tr>\n<tr>\n<td>3Vo</td>\n<td>未配線</td>\n</tr>\n<tr>\n<td>GND</td>\n<td>GND</td>\n</tr>\n<tr>\n<td>DO</td>\n<td>D12</td>\n</tr>\n<tr>\n<td>CS</td>\n<td>D10</td>\n</tr>\n<tr>\n<td>CLK</td>\n<td>D13</td>\n</tr>\n</tbody>\n</table>\n<p>加えて熱電対のコネクタを<del>破壊</del>取り外してMAX31855のターミナルブロックに接続します。極性はとりあえずどっちでもいいです。</p>\n<p><img src=\"//images.ctfassets.net/nxx3igvspvb5/XATyBdvHIiO5d3kxq9eJt/1b8e6b35ea209eb1a3c375f4bb5c1f90/PXL_20220929_194213545.jpg\" alt=\"MAX31855 + ArduinoNano\"></p>\n<h3>プログラム</h3>\n<p>PCを起動し、ArduinoIDEの方は<a href=\"https://github.com/adafruit/Adafruit-MAX31855-library\">こちら</a>をダウンロードし、「スケッチ>ライブラリをインクルード>.zip形式のライブラリをインストール」からインストール、PlatformIOの方は<a href=\"https://registry.platformio.org/libraries/adafruit/Adafruit%20MAX31855%20library/installation\">これに従って</a>MAX31855のライブラリをインストールしてください。</p>\n<p>そしたらexampleにあるserialthermocouple.inoを書き込んで、熱電対を温め(冷やし)、温度の変化が逆であった場合、熱電対の配線を入れ替えます。\n(sampleではSoftwareSPIが使われているので当該部分コメントアウトして、下のHardwareSPIの部分のコメントを外す、platformIOを使っている人はArduino.hをincludeする)</p>\n<p>以下転記しておきます(SPI変更済み)</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;SPI.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Adafruit_MAX31855.h\"</span></span>\n\n<span class=\"token comment\">// Default connection is using software SPI, but comment and uncomment one of</span>\n<span class=\"token comment\">// the two examples below to switch between software SPI and hardware SPI:</span>\n\n<span class=\"token comment\">// Example creating a thermocouple instance with software SPI on any three</span>\n<span class=\"token comment\">// digital IO pins.</span>\n<span class=\"token comment\">//#define MAXDO   3</span>\n<span class=\"token comment\">//#define MAXCS   4</span>\n<span class=\"token comment\">//#define MAXCLK  5</span>\n\n<span class=\"token comment\">// initialize the Thermocouple</span>\nAdafruit_MAX31855 <span class=\"token function\">thermocouple</span><span class=\"token punctuation\">(</span>MAXCLK<span class=\"token punctuation\">,</span> MAXCS<span class=\"token punctuation\">,</span> MAXDO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Example creating a thermocouple instance with hardware SPI</span>\n<span class=\"token comment\">// on a given CS pin.</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAXCS</span>   <span class=\"token expression\"><span class=\"token number\">10</span></span></span>\nAdafruit_MAX31855 <span class=\"token function\">thermocouple</span><span class=\"token punctuation\">(</span>MAXCS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Example creating a thermocouple instance with hardware SPI</span>\n<span class=\"token comment\">// on SPI1 using specified CS pin.</span>\n<span class=\"token comment\">//#define MAXCS   10</span>\n<span class=\"token comment\">//Adafruit_MAX31855 thermocouple(MAXCS, SPI1);</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">9600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Serial<span class=\"token punctuation\">)</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// wait for Serial on Leonardo/Zero, etc</span>\n\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MAX31855 test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// wait for MAX chip to stabilize</span>\n  <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Initializing sensor...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>thermocouple<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// OPTIONAL: Can configure fault checks as desired (default is ALL)</span>\n  <span class=\"token comment\">// Multiple checks can be logically OR'd together.</span>\n  <span class=\"token comment\">// thermocouple.setFaultChecks(MAX31855_FAULT_OPEN | MAX31855_FAULT_SHORT_VCC);  // short to GND fault is ignored</span>\n\n  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DONE.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// basic readout test, just print the current temp</span>\n   Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Internal Temp = \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>thermocouple<span class=\"token punctuation\">.</span><span class=\"token function\">readInternal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">double</span> c <span class=\"token operator\">=</span> thermocouple<span class=\"token punctuation\">.</span><span class=\"token function\">readCelsius</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isnan</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thermocouple fault(s) detected!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">uint8_t</span> e <span class=\"token operator\">=</span> thermocouple<span class=\"token punctuation\">.</span><span class=\"token function\">readError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;</span> MAX31855_FAULT_OPEN<span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FAULT: Thermocouple is open - no connections.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;</span> MAX31855_FAULT_SHORT_GND<span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FAULT: Thermocouple is short-circuited to GND.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;</span> MAX31855_FAULT_SHORT_VCC<span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FAULT: Thermocouple is short-circuited to VCC.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n     Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C = \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token comment\">//Serial.print(\"F = \");</span>\n   <span class=\"token comment\">//Serial.println(thermocouple.readFahrenheit());</span>\n\n   <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>ホットプレートの制御</h2>\n<p>※2022-09-30時点において、使っているホットプレートが大きく温度の上がり方が緩やかであるため、温度変化を温度プロファイルに近づけるには限界を感じたので、だいぶ制御が雑ですがホットプレートを新調するまではこれ以上の正確な制御はしないと思われます。</p>\n<p>今回使っているSSRはArduinoのデジタルピンに直接つなげてHIGH/LOWでON/OFFの制御ができるのでそうしています。\nリフローには温度プロファイルがメーカーから提示されていることが多く、今回は<a href=\"https://akizukidenshi.com/catalog/g/gP-09365/\" title=\"SMD可変抵抗のURL\">こちら</a>の可変抵抗のデータシートを参考に温度プロファイルを決めました。\n詳細は<a href=\"https://github.com/hirame-tech/Hotplate_reflow/tree/master\">これ</a>のsrc/main.cppの上部にコメントでメモしてあります。</p>\n<p>基本的に上述のような問題から温度が閾値以下ならON、閾値以上ならOFFという単純な制御となっており、変数stageで現在のリフローステージを管理しています。</p>\n<ul>\n<li>stage = 1\n<br>最初の温めステージで、定数STAGE1_TEMPで指定した温度まで温めます。\n<br>ステージ移動要件は温度がSTAGE1_TEMPを超えることです。</li>\n<li>stage = 2\n<br>ある程度の時間温めることで温度ムラを抑えるステージで、定数STAGE2_TEMP前後で温度を保ちます。\n<br>ステージ移動要件は、stage2開始後100秒(60s~120sだったので)を超えることです。</li>\n<li>stage = 3\n<br>2回目の温めステージで、定数STAGE3_TEMPで指定した温度まで温めます。\n<br>ステージ移動要件は温度がSTAGE3_TEMPを超えることです。</li>\n<li>stage = 4\n<br>リフローステージで、STAGE4_TEMP前後の温度で温めます。\n<br>ステージ移動要件はstage3開始後20秒を超えることです。</li>\n<li>stage = 5\n<br>冷やすステージです。\n<br>ステージ移動要件は温度が40度を下回ることです。</li>\n<li>stage = 6\n<br>終了表示をして無限ループに入ります</li>\n</ul>\n<h2>終わりに</h2>\n<p>とりあえず動く形になったので、作らなければならないものを作って少し余裕ができたら、基板化・ケース制作・LCD表示とかまで実装したいです。</p>"}},"updatedAt":"2022年09月29日","description":{"description":"自作簡易リフロー装置のメモ"},"slug":"Hot-plate-reflow"}}},"staticQueryHashes":[]}