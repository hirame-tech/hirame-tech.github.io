{"version":3,"file":"component---src-pages-index-js-0ef0f23168faedd5b8e9.js","mappings":"uJAiDA,IAvCY,IAAuC,IAAD,UAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAK,MAAMM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EACA,C,4FCYP,I,kBCrDe,SAASW,EAAS,GAAW,IAAX,KAAEC,GAAM,EACrC,MAAM,MAAEb,EAAK,UAAEc,EAAS,MAAEC,GAAUF,EAC9Bd,EAAcc,EAAKd,YAAYA,YAC/BiB,EAAQ,SAAYH,EAAKI,KAAI,IAEnC,OACI,gBAAC,EAAAC,KAAI,CAACC,GAAIH,EAAUI,UAAU,oBAC1B,uBAAKA,UAAU,aACX,2BACI,uBAAKC,IAAKN,EAAMO,KAAKC,IAAKH,UAAU,kBAAkBI,IAAI,gBAE9D,uBAAKJ,UAAU,kBACX,0BAAKpB,GACL,qBAAGoB,UAAU,kBAAkBrB,GAC/B,qBAAGqB,UAAU,kBAAkBN,KAKnD,CCde,SAAUW,EAAS,GAAuB,IAArB,KAAEC,EAAI,SAAEC,GAAU,EAIpD,OACE,gBAAC,IAAM,CAACA,SAAUA,EAAUP,UAAU,QACjCM,EAAKE,kBAAkBC,MAAMC,KAAIC,GAChC,gBAACnB,EAAQ,CAACoB,IAAKD,EAAKE,KAAKhB,KAAMJ,KAAMkB,EAAKE,SAIpD,C","sources":["webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/post-link.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport \"../styles/post-link.css\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default function PostLink({ post }) {\r\n    const { title, updatedAt, image } = post;\r\n    const description = post.description.description;\r\n    const pageLink = `/post/${post.slug}/`\r\n\r\n    return (\r\n        <Link to={pageLink} className=\"post-link-anchor\">\r\n            <div className=\"post-link\">\r\n                <div>\r\n                    <img src={image.file.url} className=\"post-link-image\" alt=\"post-cover\"></img>\r\n                </div>\r\n                <div className=\"post-link-text\">\r\n                    <h2>{title}</h2>\r\n                    <p className=\"post-link-body\">{description}</p>\r\n                    <p className=\"post-link-date\">{updatedAt}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"//いろいろ読み込み\r\nimport Seo from \"../components/seo\"\r\nimport PostLink from \"../components/post-link\"\r\nimport { Container } from \"react-bootstrap\"\r\n\r\nexport default function  BlogIndex ({ data, location }) {\r\n  //const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  //const posts = data.allMarkdownRemark.nodes\r\n\r\n  return (\r\n    <Layout location={location} className=\"mr-3\"/*title={siteTitle}*/>\r\n        {data.allContentfulPost.edges.map(edge =>\r\n          <PostLink key={edge.node.slug} post={edge.node} />\r\n        )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\n//export default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query allContentfulPost {\r\n    allContentfulPost {\r\n      edges {\r\n        node {\r\n          title\r\n          image {\r\n            title\r\n            file {\r\n              url\r\n            }\r\n          }\r\n          description {\r\n            description\r\n          }\r\n          slug\r\n          updatedAt(locale: \"ja-JP\", formatString: \"YYYY年MM月DD日\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","PostLink","post","updatedAt","image","pageLink","slug","Link","to","className","src","file","url","alt","BlogIndex","data","location","allContentfulPost","edges","map","edge","key","node"],"sourceRoot":""}